#version 450 core

#define ALPHA_MODE_OPAQUE 0
#define ALPHA_MODE_MASK 1
#define ALPHA_MODE_BLEND 2

#define MAX_LIGHT_COUNT 20
#define EPSILON 0.1

// Using 48 as it's "16*3"
// The first 16 control points are for the initial u factor and the later 16 point are for the v factor.
#define NUM_CONTROL_POINTS_MAX 48

layout (vertices = 4) out;


layout (location = 0) in vec3 v_InPosition[];
layout (location = 1) in vec3 v_InNormal[];
layout (location = 2) in vec2 v_InTexCoord[];
layout (location = 3) in vec4 v_InColor[];
layout (location = 4) in flat int v_InEntityId[];

layout (location = 0) out vec3 v_OutPosition[];
layout (location = 1) out vec3 v_OutNormal[];
layout (location = 2) out vec2 v_OutTexCoord[];
layout (location = 3) out vec4 v_OutColor[];
layout (location = 4) out flat int v_OutEntityId[];

layout(std140, binding = 5) uniform CurveParameters
{
    float u_OuterLeft;
    float u_OuterBottom;
    float u_OuterRight;
    float u_OuterTop;

    float u_InnerLeftRight;
    float u_InnerTopBottom;
};

void main() {
    gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;

    v_OutPosition[gl_InvocationID] = v_InPosition[gl_InvocationID]; 
    v_OutNormal[gl_InvocationID] = v_InNormal[gl_InvocationID]; 
    v_OutTexCoord[gl_InvocationID] = v_InTexCoord[gl_InvocationID]; 
    v_OutColor[gl_InvocationID] = v_InColor[gl_InvocationID]; 
    v_OutEntityId[gl_InvocationID] = v_InEntityId[gl_InvocationID]; 

    gl_TessLevelOuter[0] = u_OuterLeft;
    gl_TessLevelOuter[1] = u_OuterBottom;
    gl_TessLevelOuter[2] = u_OuterRight;
    gl_TessLevelOuter[3] = u_OuterTop;

    gl_TessLevelInner[0] = u_InnerTopBottom;
    gl_TessLevelInner[1] = u_InnerLeftRight;
}

